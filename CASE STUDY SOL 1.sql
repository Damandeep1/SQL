              -----CASE STUDY 1------
--Display the number of states present in the Location
select *  from Location
select COUNT( DISTINCT state) as  NO_OF_STATES FROM Location

--2. How many products ARE OF REGULAR TYPE 
SELECT * FROM Product
SELECT  COUNT (DISTINCT Product) AS REGUGLAR_PRODUCT FROM Product
WHERE Type='REGULAR'

--3. How much spending has been done on marketing of product ID 1?
SELECT * FROM fact
SELECT SUM(MARKETING) AS TOTAL_SUM FROM fact
WHERE ProductId='1'
SP_HELP FACT

ALTER TABLE FACT
ALTER COLUMN MARKETING INT

--4. What is the minimum sales of A PRODUCT 
SELECT MIN(SALES) AS MIN_SALES FROM fact

--5. Display the max Cost of Good Sold (COGS).
SELECT MAX(COGS) AS MAX_COGS FROM fact

--6. Display the details of the product where product type is coffee.
SELECT * FROM Product
SELECT ProductId,Product FROM Product WHERE [Product Type]='COFFEE'

--7. Display the details where total expenses are greater than 40
select * from fact
SELECT * FROM fact WHERE [Total Expenses]>40

--8. What is the average sales in area code 719?
SELECT * FROM fact
SELECT AVG(SALES) AS AVG_SALES FROM fact WHERE [Area Code]='719'

ALTER TABLE FACT
ALTER COLUMN SALES INT
SP_HELP FACT

--9. Find out the total profit generated by Colorado state.
SELECT * FROM Location
SELECT * FROM fact

SELECT SUM(F.PROFIT) AS SUM_OF_PROFIT FROM fact F
INNER JOIN Location L
ON F.[Area Code]=L.[Area Code]
WHERE State='COLORADO'

ALTER TABLE FACT 
ALTER COLUMN PROFIT INT

--10. Display the average inventory FOR EACH PRODUCT ID

SELECT PRODUCTID , AVG(INVENTORY) AS AVG_INT  FROM fact
GROUP BY ProductId 
ORDER BY ProductId 

ALTER TABLE FACT 
ALTER COLUMN INVENTORY INT

--Display state in a sequential order in a Location
SELECT STATE FROM Location ORDER BY State

--12. Display the average budget of the Product where the average budget
--margin should BE GRAETER THAN 100

select [Area Code], avg[Budget Margin] as [AVg Margin] from Fact
group by [Area Code]
having avg[Budget Margin] > 100
order by [Area Code]

--13. What is the total sales done on date 2010-01-01?
SELECT SUM(SALES) AS TOTAL_SALES FROM fact WHERE Date='2010-01-01'

--14. Display the average total expense of each product ID on an individual date.

SELECT Date,ProductId, AVG ([Total Expenses] )  FROM fact
GROUP BY Date,ProductId
ORDER BY Date,ProductId

ALTER TABLE FACT
ALTER COLUMN [TOTAL EXPENSES] INT

--15. Display the table with the following attributes such as date, productID, 
--product_type, product, sales, profit, state, area code

SELECT F.Date,F.Profit,F.Sales,P.PRODUCTID,P.[Product Type],P.PRODUCT,L.STATE,L.[Area Code] 
FROM fact F
INNER JOIN Location L ON L.[Area Code]=F.[Area Code]
INNER JOIN Product P ON P.ProductId=F.ProductId

--16. Display the rank without any gap to show the sales wise rank.

SELECT SALES,
RANK() OVER (ORDER BY SALES DESC) AS [RANK],
DENSE_RANK() OVER (ORDER BY SALES DESC) AS [D_RANK]
FROM fact

--17. Find the state wise profit and sales.

SELECT SUM(F.Sales) AS TOTAL_sALES , SUM(F.PROFIT) AS TOTAL_PROFIT,L.STATE 
FROM fact F
INNER JOIN Location L
ON L.[Area Code]=F.[Area Code]
GROUP BY L.State

--18. Find the state wise profit and sales along with the product name.

SELECT SUM(F.SALES) AS TOTAL_SALES ,SUM(F.PROFIT) AS TOTAL_PTOFIT,L.STATE,P.PRODUCT 
FROM fact F
INNER JOIN Location L ON L.[Area Code]=F.[Area Code]
INNER JOIN Product P ON P.ProductId=F.ProductId
GROUP BY L.State,P.Product

--19. If there is an increase in sales of 5%, calculate the increasedsales.
select Sales,(Sales * 1.05) as [Increased Sales] from Fact

--20. Find the maximum profit along with the product ID and producttype.

SELECT P.ProductId,P.[Product Type], MAX(F.PROFIT) AS MAX_PROFIT  FROM fact F
INNER JOIN Product P
ON P.ProductId=F.ProductId
GROUP BY P.ProductId,P.[Product Type]

--21. Create a stored procedure to fetch the result according to the product type
--from Product Table.

CREATE PROCEDURE PRODUCT_1 @INPUT VARCHAR(50)
AS
SELECT * FROM Product 
WHERE [Product Type]=@INPUT
EXEC PRODUCT_1 'TEA' 

--22. Write a query by creating a condition in which if the total expenses is less than
--60 then it is a profit or else loss.

SELECT *,
CASE WHEN [TOTAL EXPENSES] < 60 THEN 'PROFIT' ELSE 'LOSS' END
AS 'PROFIT /LOSS'
FROM fact

--23. Give the total weekly sales value with the date and product ID details. Use
--roll-up to pull the data in hierarchical order.

SELECT DATE,PRODUCTID , SUM(SALES) AS WEEKLY_sALES 
FROM fact
GROUP BY ROLLUP(Date,ProductId)

--24. Apply union and intersection operator on the tables which consist of
--attribute area code.

SELECT [Area Code] FROM fact
UNION 
SELECT [Area Code] FROM Location

SELECT [Area Code] FROM fact
INTERSECT
SELECT [Area Code] FROM Location

--25. Create a user-defined function for the product table to fetch a particular
--product type based upon the user preference .
CREATE FUNCTION GetProduct
(
    @ProductType NVARCHAR(50)  
)
RETURNS TABLE
AS
RETURN
(
    SELECT ProductID, [Product Type]
    FROM Product
    WHERE [Product Type] = @ProductType
);


SELECT * FROM dbo.GetProduct('tea');

--26. Change the product type from coffee to tea where product ID is 1 and undo
--it.

select * from Product
update product set  [Product Type]='tea' where ProductId='1'

select * from Product
update  product set  [Product Type]='coffee' where ProductId='1'

--27. Display the date, product ID and sales where total expenses are
--between 100 to 200.

select Date,Sales,ProductId from fact
where [Total Expenses] between 100 and 200

--28. Delete the records in the Product Table for regular type .
DELETE FROM Product WHERE Type='REGULAR'
SELECT * FROM Product
--29. Display the ASCII value of the fifth character from the columnProduct
SELECT *, ASCII(SUBSTRING(Product, 5, 1)) AS FifthCharASCII
FROM Product;